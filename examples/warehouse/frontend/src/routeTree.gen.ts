/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserImport } from './routes/user'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsProductNameImport } from './routes/products/$productName'
import { Route as ProductsProductNameProductOverviewImport } from './routes/products/$productName/ProductOverview'
import { Route as ProductsProductNameClientRequirementsImport } from './routes/products/$productName/ClientRequirements'

// Create/Update Routes

const UserRoute = UserImport.update({
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductNameRoute = ProductsProductNameImport.update({
  path: '/products/$productName',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductNameProductOverviewRoute =
  ProductsProductNameProductOverviewImport.update({
    path: '/ProductOverview',
    getParentRoute: () => ProductsProductNameRoute,
  } as any)

const ProductsProductNameClientRequirementsRoute =
  ProductsProductNameClientRequirementsImport.update({
    path: '/ClientRequirements',
    getParentRoute: () => ProductsProductNameRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/products/$productName': {
      id: '/products/$productName'
      path: '/products/$productName'
      fullPath: '/products/$productName'
      preLoaderRoute: typeof ProductsProductNameImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/$productName/ClientRequirements': {
      id: '/products/$productName/ClientRequirements'
      path: '/ClientRequirements'
      fullPath: '/products/$productName/ClientRequirements'
      preLoaderRoute: typeof ProductsProductNameClientRequirementsImport
      parentRoute: typeof ProductsProductNameImport
    }
    '/products/$productName/ProductOverview': {
      id: '/products/$productName/ProductOverview'
      path: '/ProductOverview'
      fullPath: '/products/$productName/ProductOverview'
      preLoaderRoute: typeof ProductsProductNameProductOverviewImport
      parentRoute: typeof ProductsProductNameImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  UserRoute,
  ProductsProductNameRoute: ProductsProductNameRoute.addChildren({
    ProductsProductNameClientRequirementsRoute,
    ProductsProductNameProductOverviewRoute,
  }),
  ProductsIndexRoute,
})

/* prettier-ignore-end */
